/*    ____        __  _
 *   / __ \____  / /_(_)___  ____  _____
 *  / / / / __ \/ __/ / __ \/ __ \/ ___/
 * / /_/ / /_/ / /_/ / /_/ / / / (__  )
 * \____/ .___/\__/_/\____/_/ /_/____/
 *     /_/                           */

.options-box {
  position: relative;
  /*background: url(aiad_fade.png), linear-gradient(to bottom, #f4f4f4, white);*/
  background-image: linear-gradient(to bottom, #f4f4f4, white);
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
  transition: all 2s var(--ease-in-out);
  box-shadow: inset 0 -0.1875rem 0.0625rem -0.125rem rgba(0, 0, 0, 0.12),
    inset 0 -0.0625rem 0.3125rem 0 rgba(0, 0, 0, 0.2),
    inset 0 0.125rem 0.125rem 0 rgba(0, 0, 0, 0.14),
    inset 0 0.1875rem 0.0625rem -0.125rem rgba(0, 0, 0, 0.12),
    inset 0 0.0625rem 0.3125rem 0 rgba(0, 0, 0, 0.2);
  width: calc(100% + 1.25rem);
  transform: translate(-0.625rem, 0);
  overflow: hidden;
}
.options-box .logo-spinner {
  --spinner-size: 18.75rem;
  position: absolute;
  pointer-events: none;
  width: var(--spinner-size);
  height: var(--spinner-size);
  background-size: contain;
  top: calc(-0.25 * var(--spinner-size));
  right: calc(10vw + 0.1 * var(--spinner-size));
  animation: ticktock 20s steps(20, end) 0s infinite;
  animation-play-state: paused;
}
.options-box.options-ready .logo-spinner {
  animation-play-state: running;
}
/* an animation that resembles a ticking clock
 * takes 20 seconds to rotate 1/3rd (order 3 symmetry)
 */
@keyframes ticktock {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(120deg);
  }
}
.options-box .hint-arrow.left,
.options-box .hint-arrow.right {
  height: 100%;
  width: 18.75rem;
}
.options-box .hint-arrow.top,
.options-box .hint-arrow.bottom {
  width: 100%;
  height: 18.75rem;
}
.options-box .hint-arrow {
  background-size: 18.75rem 18.75rem;
  background-position: center;
  position: absolute;
  opacity: 1;
  transition: all 2s var(--ease-in-out);
}
.options-box .hint-arrow.left {
  left: 0;
  transform: translate(calc(var(--arrow-base) * -1), 0);
}
.options-box .hint-arrow.right {
  right: 0;
  transform: translate(var(--arrow-base), 0);
}
.options-box .hint-arrow.top {
  display: none;
  top: 0;
  transform: translate(0, calc(var(--arrow-base) * -1));
}
.options-box .hint-arrow.bottom {
  display: none;
  bottom: 0;
  transform: translate(0, var(--arrow-base));
}
.options-box.options-ready .hint-arrow {
  transition: all 2s ease-in-out;
}
.options-box.options-ready .hint-arrow.left {
  transform: translate(
    calc((var(--arrow-base) - var(--arrow-difference)) * -1),
    0
  );
}
.options-box.options-ready .hint-arrow.right {
  transform: translate(calc(var(--arrow-base) - var(--arrow-difference)), 0);
}
.options-box.options-ready .hint-arrow.top {
  transform: translate(
    0,
    calc((var(--arrow-base) - var(--arrow-difference)) * -1)
  );
}
.options-box.options-ready .hint-arrow.bottom {
  transform: translate(0, calc(var(--arrow-base) - var(--arrow-difference)));
}
@media only screen and (min-width: 999px) {
  .options-box.options-ready .hint-arrow.left {
    transform: translate(
      calc((var(--arrow-base) - (var(--arrow-difference)) * 2) * -1),
      0
    );
  }
  .options-box.options-ready .hint-arrow.right {
    transform: translate(
      calc(var(--arrow-base) - (var(--arrow-difference)) * 2),
      0
    );
  }
}
@media only screen and (min-height: 800px) {
  .options-box.options-ready .hint-arrow.top {
    transform: translate(
      0,
      calc((var(--arrow-base) - (var(--arrow-difference)) * 2) * -1)
    );
  }
  .options-box.options-ready .hint-arrow.bottom {
    transform: translate(
      0,
      calc(var(--arrow-base) - var(--arrow-difference) * 2)
    );
  }
}
@media only screen and (max-width: 43.6875rem) {
  .options-box .logo-spinner {
    right: calc(50vw - 0.5 * var(--spinner-size));
  }
}
@media only screen and (min-aspect-ratio: 4/3) and (min-width: 1366px) {
  .options-box {
    box-shadow: none;
  }
  .options-box .logo-spinner {
    --spinner-size: 40rem;
    right: -17rem;
    top: calc(50% - 20rem);
  }
  .options-box .hint-arrow {
    background-size: 100% 18.75rem;
  }
  .options-box .hint-arrow.left,
  .options-box .hint-arrow.right {
    display: none;
  }
  .options-box .hint-arrow.top,
  .options-box .hint-arrow.bottom {
    display: block;
  }
}

.options {
  height: calc(100% - 0rem);
  max-width: 50%;
  margin: 0 auto;
  padding: 0 0;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: center;
  flex-wrap: wrap;
  align-content: space-around;
  transition-duration: 0s;
}
.options.balance {
  /* change the height so that the right column never has 1 option */
  height: calc(100% - 1.25rem);
  padding: 0.625rem 0;
  max-width: 60%;
}

.option {
  -webkit-appearance: none;
  -moz-appearance: none;
  display: block;
  margin: 0.25em 0;
  box-sizing: border-box;
  font-family: Verdana, Arial, Helvetica, sans-serif;
  font-size: inherit;
  position: relative;
  background: rgba(255, 255, 255, 0.7);
  text-align: left;
}
.option:focus {
  outline: none;
}
.option.action {
  color: #b01;
  text-decoration: none;
  transition: all 0.2s;
  padding: 0.3125rem 0.75rem 0.3125rem 0.9375rem;
  border: none;
  margin-left: 0.1875rem;
  position: relative;
  z-index: 2;
}
.option.action::before {
  background-color: transparent;
  border: 0.0625rem solid #b01;
  transition-duration: 0.2s;
  transform: skewX(-20deg);
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  width: 100%;
  height: calc(100% - 0.125rem);
  content: "";
  padding-bottom: -0.0625rem;
}
.option.action:hover {
  color: white;
  transition-duration: 0.2s;
  background: transparent;
}
.option.action:hover::before {
  background-color: #b01;
  transition-duration: 0.2s;
}
.option.speech {
  color: #205dbf;
  color: var(--middle-theme);
  border: 0.0625rem solid #205dbf;
  border: 0.0625rem solid var(--middle-theme);
  text-decoration: none;
  border-radius: 1.25rem;
  transition: all 0.2s;
  padding: 0.25rem 0.9375rem;
}
.option.speech:hover {
  color: white;
  background-color: #205dbf;
  background-color: var(--middle-theme);
  transition-duration: 0.2s;
  /*margin-left: 1.875rem;*/
}
.option::after {
  content: attr(data-action);
  position: absolute;
  font-weight: bold;
  color: rgba(0, 0, 0, 0.5);
  left: 0;
  top: 50%;
  transform: translate(0, -50%);
  transition-duration: 0.2s;
  z-index: 0;
  opacity: 0;
}
.option:hover::after {
  transform: translate(calc(-100% - 0.3125rem), -50%);
  opacity: 1;
}
/*.option.action:hover::after {
  margin-left: -1.4375rem;
  opacity: 1;
}*/
.option.speech#boot-up {
  color: white;
  border-color: white;
  margin-left: 0;
  background-color: transparent;
}
.option.speech#boot-up:hover {
  color: #205dbf;
  color: var(--middle-theme);
  background-color: white;
}
.option.speech#boot-up::after,
.option.speech#boot-up:hover::after {
  content: none;
}
.option.action#terminal-send {
  background-color: transparent;
  color: #555;
  margin-left: 0;
}
.option.action#terminal-send:hover {
  color: white;
  margin-left: 0;
}
.option.action#terminal-send::before {
  background-color: white;
  border-color: #555;
}
.option.action#terminal-send::after,
.option.action#terminal-send:hover::after {
  content: none;
}
.option.action#terminal-send:hover::before {
  background-color: #555;
  margin-left: 0;
}
.option.action#restart {
  background-color: transparent;
  color: white;
  margin-left: 0;
}
.option.action#restart:hover {
  color: #333;
  margin-left: 0;
}
.option.action#restart::before {
  border-color: #555;
}
.option.action#restart::after,
.option.action#restart:hover::after {
  content: none;
}
.option.action#restart:hover::before {
  background-color: white;
  margin-left: 0;
}

.options .option-wrapper {
  display: inline-block;
}
.options .option-wrapper.ng-enter {
  transition: opacity 0.4s ease-out 0.1s, transform 0.4s ease-out 0.1s;
  /* "all" will make it transition from wikidot style */
}
.options .option-wrapper.ng-enter-stagger {
  transition-delay: 0.2s;
  transition-duration: 0s;
}
.options .option-wrapper.ng-enter-active {
}
.options .option-wrapper.ng-enter button {
  transition: inherit;
  opacity: 0;
  transform: translate(-1.875rem, 0);
}
.options .option-wrapper.ng-enter-active button {
  opacity: 1;
  transform: translate(0, 0);
}
.options .option-wrapper.ng-leave {
  transition: opacity 0.4s ease-out 0s, transform 0.4s ease-out 0s;
}
.options .option-wrapper.ng-leave-active {
}
.options .option-wrapper.ng-leave button {
  transition: inherit;
  opacity: 1;
  transform: translate(0, 0);
}
.options .option-wrapper.ng-leave-active button {
  opacity: 0;
  transform: translate(0, 1.875rem);
}
.options .option-wrapper.ng-leave button:active,
.options .option-wrapper.ng-leave button:focus {
  transition: transform 0.5s linear 0s, opacity 0.5s linear 0s;
  opacity: 1;
  transform: translate(0, 0);
}
.options .option-wrapper.ng-leave-active button:active,
.options .option-wrapper.ng-leave-active button:focus {
  opacity: 0;
  transform: translate(0, -0rem);
}
